version: "2.1"
services:
  rabbitmq:
    build:
      context: .
      dockerfile: rabbit.Dockerfile
    container_name: 'rabbitmq'
    ports:
        - "5672:5672"
        - "15672:15672"
    depends_on:
      - db
    env_file:
      - .env
    environment:
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASS}
    volumes:
      - rabbit_data:/var/lib/rabbitmq/mnesia/

  db:
    image: postgres:15
    container_name: db
    ports:
    - "${HOST_POSTGRES_PORT}:5432"
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - parser_postgres_data:/var/lib/postgresql/data/
    restart: on-failure

  parser_app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: parser_app
    env_file:
      - .env
    depends_on:
      - db
      - rabbitmq
      - translation_app
      - telegram_app
    command: ./start.sh
    restart: on-failure

  translation_app:
    build:
      context: ./services/
      dockerfile: ./translatiion_service/Dockerfile
    container_name: translation_app
    env_file:
      - .env
    depends_on:
      - db
      - rabbitmq
      - telegram_app
    command: bash -c "python rabbitmq_main.py"
    restart: on-failure

  telegram_app:
    build:
      context: ./services/
      dockerfile: ./telegram_service/Dockerfile
    container_name: telegram_app
    env_file:
      - .env
    depends_on:
      - db
      - rabbitmq
    command: bash -c "python rabbitmq_main.py"
    restart: on-failure


volumes:
  parser_postgres_data:
  rabbit_data:
